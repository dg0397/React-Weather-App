{"version":3,"sources":["Components/Header/Header.jsx","Components/Spinner/index.js","context/LocationContext.jsx","hooks/useGlobalLocation.js","Components/TemperatureButtons/TemperatureButtons.jsx","Components/Weather/Weather.jsx","pages/Home/index.js","Components/SingleDetail/SingleDetail.jsx","hooks/useDataDetail.js","Components/WeatherDetails/WeatherDetails.jsx","pages/Detail/index.js","Services/getWeatherAPI.js","hooks/useLocation.js","Services/geolocation.js","Components/NavMenu.jsx","Components/Main/Main.jsx","Components/Footer/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Header","Spinner","className","Context","React","createContext","LocationContextProvider","children","useState","location","setLocation","loading","setLoading","temperatureUnit","setTemperatureUnit","Provider","value","useGlobalLocation","useContext","LocationContext","TemperatureButtons","temp","changeTemperatureFormat","handleClick","e","target","innerText","onClick","id","Weather","data","name","country","mainDescription","icon","newTemperature","toFixed","src","alt","Home","console","log","format","SingleDetail","key","unit","date","Date","hours","getHours","mins","getMinutes","resultHours","resultMins","formatValue","formatHumidity","formatVisibility","formatDeg","useDataDetail","detail","valueKey","newDetailFormat","replace","toUpperCase","WeatherDetails","singleDetails","singleDetailsKeys","Object","keys","map","singleDetailKey","Detail","detailData","getWeatherAPI","latitude","longitude","setState","setStatus","fetch","then","json","coord","sys","weather","main","visibility","wind","dt","sunrise","sunset","weatherData","feels_like","humidity","temp_max","temp_min","deg","speed","lon","lat","useLocation","useEffect","callback","navigator","geolocation","getCurrentPosition","coords","getLocation","NavMenu","path","activeStyle","backgroundColor","to","style","Main","component","Footer","href","rel","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"+YAWeA,G,YARA,WACX,OACI,gCACI,8C,MCHG,SAASC,IACpB,OAAO,yBAAKC,UAAU,YAAW,8BAAW,8BAAW,8BAAW,+B,WCFhEC,EAAUC,IAAMC,cAAc,IAE7B,SAASC,EAAT,GAAgD,IAAbC,EAAY,EAAZA,SAAY,EAClBC,mBAAS,IADS,mBAC3CC,EAD2C,KACjCC,EADiC,OAEpBF,oBAAS,GAFW,mBAE3CG,EAF2C,KAElCC,EAFkC,OAGLJ,mBAAS,KAHJ,mBAG3CK,EAH2C,KAG3BC,EAH2B,KAKlD,OACI,kBAACX,EAAQY,SAAT,CAAkBC,MAAO,CAAEP,WAAUC,cAAcC,UAASC,aAAaC,kBAAiBC,uBACrFP,GAKEJ,QCbA,SAASc,IAAqB,IAAD,EACyBC,qBAAWC,GAC5E,MAAO,CAAEV,SAF+B,EAChCA,SACWE,QAFqB,EACtBA,QACUE,gBAFY,EACbA,gBACkBC,mBAFL,EACGA,oB,MCDhC,SAASM,EAAT,GAA4E,IAA/CC,EAA8C,EAA9CA,KAAKC,EAAyC,EAAzCA,wBAAwBT,EAAiB,EAAjBA,gBAC/DU,EAAc,SAAAC,GAChB,IAAMR,EAAQQ,EAAEC,OAAOC,UACvBJ,EAAwBN,IAE5B,OACI,yBAAKd,UAAY,eACb,sCAAQmB,EAAR,YAAgBR,IAChB,yBAAKX,UAAY,sBACb,4BAAQyB,QAAWJ,EAAaK,GAA0B,MAApBf,EAAyB,SAAU,MAAzE,KACA,4BAAQc,QAAWJ,EAAaK,GAA0B,MAApBf,EAAyB,SAAU,MAAzE,O,UCIDgB,EAbC,SAAC,GAAoD,IAAnDC,EAAkD,EAAlDA,KAAKR,EAA6C,EAA7CA,wBAAwBT,EAAqB,EAArBA,gBACpCkB,EAA0CD,EAA1CC,KAAKC,EAAqCF,EAArCE,QAAQX,EAA6BS,EAA7BT,KAAKY,EAAwBH,EAAxBG,gBAAgBC,EAAQJ,EAARI,KACnCC,EAAqC,MAApBtB,EAA0BQ,GAAgB,EAAPA,EAAS,EAAK,IAAIe,QAAQ,GACpF,OACI,yBAAKlC,UAAY,WACb,4BAAK6B,EAAL,KAAaC,GACb,kBAAC,EAAD,CAAoBX,KAAQc,EAAgBb,wBAA2BA,EAAyBT,gBAAmBA,IACnH,4BAAKoB,GACL,yBAAKI,IAAKH,EAAMI,IAAKL,MCRlB,SAASM,IAAO,IAAD,EAC4BtB,IAA/CR,EADmB,EACnBA,SAASK,EADU,EACVA,mBAAmBD,EADT,EACSA,gBACnC2B,QAAQC,IAAIhC,GAIZ,OACI,kBAAC,EAAD,CAAUqB,KAAQrB,EAAUa,wBAJA,SAACoB,GAC7B5B,EAAmB4B,IAG6D7B,gBAAmBA,I,iBCN5F,SAAS8B,EAAT,GAAyD,IAAD,ECLxD,SAAuBC,EAAK5B,GAAoB,IAAb6B,EAAY,uDAAL,IACpD,GAAY,YAARD,GAA6B,WAARA,GAA4B,OAARA,EAAc,CAEtD,IAAME,EAAO,IAAIC,KAAa,IAAR/B,GAChBgC,EAAQF,EAAKG,WACbC,EAAOJ,EAAKK,aAEZC,EAAcJ,GAAS,GAAT,UACZA,GACFA,EAAQ,GAAKA,EAAQ,GAAtB,WACSA,GADT,KAGCK,EAAaH,GAAQ,GAAR,UACXA,GACFA,EAAO,GAAKA,EAAO,GAApB,WACSA,GADT,KAICI,EAAW,UAAMF,EAAN,cAAuBC,GACxC,MAAO,CAAET,MAAK5B,MAAOsC,GAGnB,GAAY,eAARV,GAAgC,aAARA,GAA8B,aAARA,EAAoB,CAQxE,MAAO,CAAEA,MAAK5B,MALD,MAAT6B,EACc7B,EAAK,UAAMA,EAAN,SAAkB,GAEvBA,EAAK,WAAgB,EAARA,EAAY,EAAK,IAAIoB,QAAQ,GAArC,SAA8C,IAInE,GAAY,aAARQ,EAAoB,CAE1B,IAAIW,EAAc,UAAMvC,EAAN,MAClB,MAAO,CAAE4B,MAAK5B,MAAOuC,GAEnB,GAAY,eAARX,EAAsB,CAE5B,IAAIY,EAAgB,UAAMxC,EAAQ,IAAd,OACpB,MAAO,CAAE4B,MAAK5B,MAAOwC,GAEnB,GAAY,QAARZ,EAAe,CACrB,IAAIa,EAAS,UAAMzC,EAAN,QACb,MAAO,CAAE4B,IAAM,WAAY5B,MAAOyC,GAChC,MAAY,UAARb,EACC,CAAEA,IAAM,aAAc5B,SAEtB,CAAE4B,MAAK5B,SDzCA0C,CAF+C,EAAjCC,OAAiC,EAA1BC,SAA0B,EAAjB/C,iBAE3C+B,EAF4D,EAE5DA,IAAI5B,EAFwD,EAExDA,MACL6C,EAAkBjB,EAAIkB,QAAQ,IAAI,KAAKC,cAE7C,OACI,yBAAK7D,UAAU,iBACX,2BAAI2D,GACJ,4BAAK7C,GAAgB,M,METlB,SAASgD,EAAT,GAAyD,IAA/BlC,EAA8B,EAA9BA,KAAMjB,EAAwB,EAAxBA,gBAAgBkB,EAAQ,EAARA,KACrDkC,EAAa,eAAOnC,GACpBoC,EAAoBC,OAAOC,KAAKH,GAEtC,OADAzB,QAAQC,IAAIwB,GAER,yBAAK/D,UAAU,kBACX,4BAAK6B,GACL,yBAAK7B,UAAU,kBAEPgE,EAAkBG,KAAI,SAAAC,GAClB,OACI,kBAAC,EAAD,CAAc1B,IAAO0B,EAAiBX,OAAQW,EAAiBV,SAAUK,EAAcK,GAAkBzD,gBAAkBA,SCRxI,SAAS0D,IAAS,IAAD,EACoCtD,IAA/CuD,EADW,EACrB/D,SAAU+D,WAAsBzC,EADX,EACCtB,SAAUsB,KAAMlB,EADjB,EACiBA,gBAE7C,OADA2B,QAAQC,IAAI+B,GAER,kBAAC,EAAD,CAAgB1C,KAAQ0C,EAAY3D,gBAAmBA,EAAiBkB,KAAQA,ICXzE,SAAS0C,EAAcC,EAASC,EAAUC,EAASC,GAC9DA,GAAU,GACVC,MAAM,qDAAD,OAAsDJ,EAAtD,gBAAsEC,IACtEI,MAAK,SAAAjD,GAAI,OAAIA,EAAKkD,UAClBD,MAAK,SAAAtE,GAAa,IACRwE,EAAkDxE,EAAlDwE,MAAMlD,EAA4CtB,EAA5CsB,KAAKmD,EAAuCzE,EAAvCyE,IAAIC,EAAmC1E,EAAnC0E,QAAQC,EAA2B3E,EAA3B2E,KAAKC,EAAsB5E,EAAtB4E,WAAWC,EAAW7E,EAAX6E,KAAKC,EAAM9E,EAAN8E,GADrC,EAGsBJ,EAAQ,GAAhClD,EAHE,EAGPmD,KAAqBlD,EAHd,EAGcA,KACrBsD,EAA0BN,EAA1BM,QAAQC,EAAkBP,EAAlBO,OAMTC,EAAc,CAACT,QAAMlD,OAAKC,QANCkD,EAAXlD,QAMkBC,kBAAgBZ,KALH+D,EAA9C/D,KAKsDa,OAAKsC,WAD/C,CAACgB,UAAQC,SAAOE,WAJkBP,EAAzCO,WAIkCC,SAJOR,EAA9BQ,SAIgCC,SAJFT,EAArBS,SAIgCC,SAJXV,EAAZU,SAIgCT,aAAWU,IAHhET,EAAbS,IAGiFC,MAHpEV,EAATU,MAGmFC,IAF5EhB,EAAXgB,IAE2FC,IAFhFjB,EAAPiB,IAE2FX,OAEtG/C,QAAQC,IAAIhC,GACZmE,EAASc,GACTb,GAAU,MCZP,SAASsB,IAAe,IAAD,EACqBjF,qBAAWC,GAA1DV,EAD0B,EAC1BA,SAAUC,EADgB,EAChBA,YAAaC,EADG,EACHA,QAASC,EADN,EACMA,WAMxC,OAJAwF,qBAAU,YCRC,SAAqBC,EAASzB,EAASC,GAClD,IAAGyB,UAAUC,YAOT,MAAO,gDANPD,UAAUC,YAAYC,oBAAoB,SAAC/F,GAAa,IAC7CgG,EAAUhG,EAAVgG,OACA/B,EAAsB+B,EAAtB/B,SAASC,EAAa8B,EAAb9B,UAChB0B,EAAS3B,EAASC,EAAUC,EAASC,MDIzC6B,CAAYjC,EAAe/D,EAAaE,KACzC,CAACF,EAAaE,IAEV,CAAEH,WAAUE,W,WESRgG,G,MAjBC,WAAO,IAAD,EACFR,cAATS,EADW,oBAEZC,EAAc,CAChBC,gBAAiB,WAErB,OACI,yBAAK5G,UAAU,WACX,kBAAC,IAAD,CAAM6G,GAAG,KACL,uBAAGC,MAAkB,MAATJ,EAAeC,EAAc,MAAzC,oBAEJ,kBAAC,IAAD,CAAME,GAAG,WACL,uBAAGC,MAAkB,YAATJ,EAAqBC,EAAc,MAA/C,sBCcDI,G,MAjBF,WAAO,IACRtG,EAAYwF,IAAZxF,QACR,OACI,oCAEQA,EACI,kBAACV,EAAD,MACA,yBAAKC,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAO0G,KAAK,IAAIM,UAAW3E,IAC3B,kBAAC,IAAD,CAAOqE,KAAK,UAAUM,UAAW3C,QCX1C4C,G,MARA,WACX,OACI,gCACI,uCAAY,uBAAGC,KAAK,4BAA4B3F,OAAS,SAAS4F,IAAI,uBAA1D,cCgBTC,MAZf,WACE,OACE,yBAAKpH,UAAU,OACb,kBAAC,EAAD,MACA,kBAACI,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCLciH,QACW,cAA7BC,OAAO/G,SAASgH,UAEe,UAA7BD,OAAO/G,SAASgH,UAEhBD,OAAO/G,SAASgH,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBzB,WACrBA,UAAU0B,cAAcC,MACrBlD,MAAK,SAAAmD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7F,QAAQ6F,MAAMA,EAAMC,c","file":"static/js/main.72a96b0f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Weather App</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport \"./styles.css\";\r\n\r\nexport default function Spinner () {\r\n    return <div className=\"lds-ring\"><div></div><div></div><div></div><div></div></div>\r\n  }","import React, { useState } from 'react';\r\n\r\nconst Context = React.createContext({});\r\n\r\nexport function LocationContextProvider({ children }) {\r\n    const [location, setLocation] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [temperatureUnit,setTemperatureUnit] = useState(\"C\");\r\n\r\n    return (\r\n        <Context.Provider value={{ location, setLocation , loading ,setLoading , temperatureUnit, setTemperatureUnit }}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default Context;","import { useContext } from 'react'\r\nimport LocationContext from '../context/LocationContext';\r\n\r\nexport default function useGlobalLocation() {\r\n    const { location, loading ,temperatureUnit,setTemperatureUnit} = useContext(LocationContext)\r\n    return { location, loading ,temperatureUnit ,setTemperatureUnit}\r\n}\r\n","import React from 'react';\r\nimport './TemperatureButtons.css'\r\n\r\nexport default function TemperatureButtons({temp,changeTemperatureFormat,temperatureUnit}){\r\n    const handleClick = e =>{\r\n        const value = e.target.innerText\r\n        changeTemperatureFormat(value)\r\n    }\r\n    return(\r\n        <div className = 'Temperature' >\r\n            <h3>{`${temp} ${temperatureUnit}`}</h3>\r\n            <div className = \"TemperatureButtons\" >\r\n                <button onClick = {handleClick} id = {temperatureUnit === 'C'? 'active': null}>C</button>\r\n                <button onClick = {handleClick} id = {temperatureUnit === 'F'? 'active': null}>F</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport TemperatureButtons from '../TemperatureButtons/TemperatureButtons';\r\nimport \"./Weather.css\"\r\n\r\nconst Weather = ({data,changeTemperatureFormat,temperatureUnit }) =>{\r\n    const {name,country,temp,mainDescription,icon} = data\r\n    const newTemperature = temperatureUnit === \"C\" ? temp : ((temp * 9/5) + 32).toFixed(2);\r\n    return(\r\n        <div className = 'Weather'>\r\n            <h2>{name}, {country}</h2>\r\n            <TemperatureButtons temp = {newTemperature} changeTemperatureFormat = {changeTemperatureFormat} temperatureUnit = {temperatureUnit}/>\r\n            <h3>{mainDescription}</h3>\r\n            <img src={icon} alt={mainDescription}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Weather","import React from 'react';\r\nimport useGlobalLocation from '../../hooks/useGlobalLocation';\r\nimport Weather from '../../Components/Weather/Weather';\r\n\r\nexport default function Home(){\r\n    const {location,setTemperatureUnit,temperatureUnit} = useGlobalLocation();\r\n    console.log(location)\r\n    const changeTemperatureFormat = (format) => {\r\n        setTemperatureUnit(format)\r\n    }\r\n    return(\r\n        <Weather  data = {location} changeTemperatureFormat = {changeTemperatureFormat} temperatureUnit = {temperatureUnit}/>\r\n    )\r\n}","import React from 'react';\r\nimport './SingleDetail.css';\r\n\r\nimport useDataDetail from '../../hooks/useDataDetail'\r\n\r\nexport default function SingleDetail({detail,valueKey,temperatureUnit}){\r\n    \r\n    const {key,value} = useDataDetail(detail,valueKey,temperatureUnit);\r\n    const newDetailFormat = key.replace(\"_\",\" \").toUpperCase();\r\n    \r\n    return(\r\n        <div className=\"Single_Detail\" >\r\n            <p>{newDetailFormat}</p>\r\n            <h4>{value ? value : \"-\"}</h4>\r\n        </div>\r\n    )\r\n}","export default function useDataDetail(key, value, unit = \"C\") {\r\n     if (key === 'sunrise' || key === 'sunset' || key === \"dt\") {\r\n\r\n          const date = new Date(value * 1000);\r\n          const hours = date.getHours();\r\n          const mins = date.getMinutes();\r\n\r\n          const resultHours = hours >= 10 ?\r\n               `${hours}` :\r\n               (hours > 0 && hours < 10) ?\r\n                    `0${hours}` :\r\n                    `00`;\r\n          const resultMins = mins >= 10 ?\r\n               `${mins}` :\r\n               (mins > 0 && mins < 10) ?\r\n                    `0${mins}` :\r\n                    `00`;\r\n\r\n          const formatValue = `${resultHours} : ${resultMins}`\r\n          return { key, value: formatValue };\r\n\r\n\r\n     } else if (key === 'feels_like' || key === 'temp_max' || key === 'temp_min') {\r\n\r\n          let formatTemp = '';\r\n          if (unit === \"C\") {\r\n               formatTemp = value ? `${value}°C` : \"\";\r\n          } else {\r\n               formatTemp = value ? `${((value * 9 / 5) + 32).toFixed(2)}°F` : \"\";\r\n          }\r\n          return { key, value: formatTemp };\r\n\r\n     } else if (key === 'humidity') {\r\n\r\n          let formatHumidity = `${value} %`;\r\n          return { key, value: formatHumidity };\r\n\r\n     } else if (key === 'visibility') {\r\n\r\n          let formatVisibility = `${value / 1000} mi`\r\n          return { key, value: formatVisibility };\r\n\r\n     } else if (key === 'deg') {\r\n          let formatDeg = `${value}°`;\r\n          return { key : \"wind_deg\", value: formatDeg }\r\n     } else if (key === 'speed') {\r\n          return { key : \"wind_speed\", value }\r\n     } else {\r\n          return { key, value }\r\n     }\r\n}","import React from 'react';\r\nimport SingleDetail from '../SingleDetail/SingleDetail';\r\nimport './WeatherDetails.css'\r\n\r\nexport default function WeatherDetails({ data, temperatureUnit,name }) {\r\n    const singleDetails = {...data};\r\n    const singleDetailsKeys = Object.keys(singleDetails);\r\n    console.log(singleDetails)\r\n    return (\r\n        <div className=\"WeatherDetails\">\r\n            <h2>{name}</h2>\r\n            <div className=\"Single_Details\" >\r\n                {\r\n                    singleDetailsKeys.map(singleDetailKey => {\r\n                        return (\r\n                            <SingleDetail key = {singleDetailKey} detail={singleDetailKey} valueKey={singleDetails[singleDetailKey]} temperatureUnit ={temperatureUnit}/>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport WeatherDetails from '../../Components/WeatherDetails/WeatherDetails'\r\n\r\nimport useGlobalLocation from '../../hooks/useGlobalLocation';\r\n\r\n\r\n\r\nexport default function Detail(){\r\n    const {location:{detailData},location:{name},temperatureUnit} = useGlobalLocation();\r\n    console.log(detailData)\r\n    return(\r\n        <WeatherDetails data = {detailData} temperatureUnit = {temperatureUnit} name = {name}/>\r\n    )\r\n}","export default function getWeatherAPI(latitude,longitude,setState,setStatus){\r\n    setStatus(true)\r\n    fetch(`https://fcc-weather-api.glitch.me/api/current?lat=${latitude}&lon=${longitude}`)\r\n        .then(data => data.json())\r\n        .then(location => {\r\n            const {coord,name,sys,weather,main,visibility,wind,dt} = location;\r\n\r\n            const {main:mainDescription,icon} = weather[0];\r\n            const {sunrise,sunset,country} = sys;\r\n            const {temp,feels_like,humidity,temp_max,temp_min} = main;\r\n            const {deg,speed} = wind;\r\n            const {lon,lat} = coord;\r\n\r\n            const detailData = {sunrise,sunset,feels_like,humidity,temp_max,temp_min,visibility,deg,speed,lon,lat,dt}\r\n            const weatherData = {coord,name,country,mainDescription,temp,icon,detailData};\r\n            console.log(location)\r\n            setState(weatherData)\r\n            setStatus(false);\r\n        })\r\n}","import { useEffect, useContext } from 'react';\r\nimport LocationContext from '../context/LocationContext';\r\nimport getWeatherAPI from '../Services/getWeatherAPI'\r\nimport getLocation from '../Services/geolocation';\r\n\r\nexport default function useLocation() {\r\n    const { location, setLocation, loading, setLoading } = useContext(LocationContext);\r\n\r\n    useEffect(() => {\r\n        getLocation(getWeatherAPI, setLocation, setLoading);\r\n    }, [setLocation, setLoading])\r\n\r\n    return { location, loading }\r\n}","export default function getLocation(callback,setState,setStatus){\r\n    if(navigator.geolocation){\r\n        navigator.geolocation.getCurrentPosition( (location)=> {\r\n            const {coords} = location;\r\n            const {latitude,longitude} = coords;\r\n            callback(latitude,longitude,setState,setStatus)\r\n        })\r\n    }else{\r\n        return \"Geolocation is not supported by this browser.\"\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { Link ,useLocation} from 'wouter';\r\nimport \"./NavMenu.css\";\r\n\r\nconst NavMenu = () => {\r\n    const [path,] = useLocation();   \r\n    const activeStyle = {\r\n        backgroundColor: \"#57acd6\"\r\n    }\r\n    return (\r\n        <div className=\"Buttons\">\r\n            <Link to='/'>\r\n                <p style = {path === '/' ? activeStyle : null} >Current Weather</p>\r\n            </Link>\r\n            <Link to='/detail'>\r\n                <p style = {path === '/detail' ? activeStyle : null} >Detail Weather</p>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NavMenu\r\n","import React from 'react';\r\nimport Spinner from '../Spinner/index';\r\nimport Home from \"../../pages/Home/index\";\r\nimport Detail from '../../pages/Detail/index'\r\n\r\nimport useLocation from '../../hooks/useLocation'\r\n\r\nimport { Route} from \"wouter\";\r\nimport NavMenu from '../NavMenu';\r\n\r\nimport './Main.css';\r\n\r\nconst Main = () => {\r\n    const { loading } = useLocation()\r\n    return (\r\n        <>\r\n            {\r\n                loading ?\r\n                    <Spinner /> :\r\n                    <div className='Main'>\r\n                        <NavMenu />\r\n                        <Route path=\"/\" component={Home} />\r\n                        <Route path=\"/detail\" component={Detail} />\r\n                    </div>\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default Main","import React from \"react\";\r\nimport './Footer.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <p>Coded by <a href=\"https://github.com/dg0397\" target = \"_blank\" rel=\"noopener noreferrer\">DG0397</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport './App.css';\n\nimport Header from './Components/Header/Header';\nimport Main from './Components/Main/Main'\nimport Footer from './Components/Footer/Footer';\n\n\nimport { LocationContextProvider } from './context/LocationContext';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <LocationContextProvider>\n        <Main />\n      </LocationContextProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}